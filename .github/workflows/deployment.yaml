name: Laravel Reactjs Deployment

on:
    push:
        branches:
            - main
env:
    AWS_REGION: us-east-1
    ECR_REPOSITORY: deployment

jobs:
    install:
        name: Set Up Application
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Repo
              uses: actions/checkout@v3

            - name: Set up Node.js
              uses: actions/setup-node@v3

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                php-version: '8.2'
                extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
                coverage: none

            - name: Configure Credential
              uses: aws-actions/configure-aws-credentials@v1
              with: 
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}  
                aws-region: ${{ secrets.AWS_REGION }}

    build-laravel:
        needs: install
        name: Build, Tag, And Push Image Laravel
        runs-on: ubuntu-latest
        steps:
            - name: Login To ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2

            - name: Build And Push Image
              id: build-image
              env: 
                 ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                 WORKER_IMAGE_TAG: worker-laravel-latest
              run: |
                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$WORKER_IMAGE_TAG --build-arg aws_region=${{ env.AWS_REGION }} --build-arg copy_or_mount="copy" -f workerlaravel/Dockerfile ./workerlaravel
                docker push $ECR_REGISTRY/$ECR_REPOSITORY:$WORKER_IMAGE_TAG

    build-reactjs:
        needs: build-laravel
        name: Build Reactjs Image
        runs-on: ubuntu-latest
        steps:
            - name: Build And Push Image
              id: build-image
              env: 
                 ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                 WORKER_IMAGE_TAG: worker-reactjs-latest
              run: |
                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$WORKER_IMAGE_TAG --build-arg aws_region=${{ env.AWS_REGION }} --build-arg copy_or_mount="copy" -f workerreact/Dockerfile ./workerreact
                docker push $ECR_REGISTRY/$ECR_REPOSITORY:$WORKER_IMAGE_TAG

        


